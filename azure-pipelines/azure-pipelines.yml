trigger:
- master

pool:
  vmImage: 'ubuntu-16.04'

variables:
  buildConfiguration: 'Release'
  
stages:
- stage: QA
  jobs:
  - job: API
    steps:

    # Install dotnet sdk
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 2.1.301
        installationPath: $(Agent.ToolsDirectory)/dotnet

    # Restore
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'

    # Build
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        arguments: '--configuration $(buildConfiguration)'

    # Test
    - task: DotNetCoreCLI@2
      displayName: Run Tests
      inputs:
        command: 'test'
        arguments: -c $(BuildConfiguration) --settings $(System.DefaultWorkingDirectory)/CodeCoverage.runsettings --collect:"XPlat Code Coverage" -- RunConfiguration.DisableAppDomain=true
        projects: '**/MyHelper.Tests.Unit/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: Install ReportGenerator tool
      inputs:
        command: custom
        custom: tool
        arguments: install --tool-path . dotnet-reportgenerator-globaltool
      
    - script: ./reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"
      displayName: Create reports
      
    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage'
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml 
