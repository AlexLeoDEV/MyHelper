# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-16.04'

variables:
  buildConfiguration: 'Release'
  
stages:
- stage: QA
  jobs:
  - job: API
    steps:

    # Install dotnet sdk
    - task: DotNetCoreInstaller@1
      displayName: 'Use .NET Core sdk 2.1.31'
        inputs:
          version: '2.1.31' 

    # Restore and build 
    - script dotnet build --configuration $(buildConfiguration)
    displayName: 'dotnet build $(buildConfiguration)'

    - script: echo Build Sources Directory is ${{ Build.SourcesDirectory }}.
        displayName: 'Build Sources Directory'

    # Run all tests with "/p:CollectCoverage=true /p:CoverletOutputFormat=cobertura" to generate the code coverage file
    - task: DotNetCoreCLI@2
      displayName: dotnet test
      inputs:
      command: test
      arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
      projects: '**/MyHelper.Tests.Unit/*.csproj'

    # Generate the report using ReportGenerator (https://github.com/danielpalme/ReportGenerator)
    # First install the tool on the machine, then run it
    - script: |
      dotnet tool install -g dotnet-reportgenerator-globaltool
      reportgenerator -reports:$(Build.SourcesDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines;Cobertura
      displayName: Create Code coverage report

    # Publish the code coverage result (summary and web site)
    # The summary allows to view the coverage percentage in the summary tab
    # The web site allows to view which lines are covered directly in Azure Pipeline
    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage'
      inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
      reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'
